name: Java CI with Maven, Docker, and SonarQube

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build Backend with Maven
      working-directory: polling-app-server
      run: mvn -B package --file pom.xml

    - name: Build Backend Docker Image
      working-directory: polling-app-server
      run: |
        docker build -t saihari1/hari:polllatestb .

    - name: Install Trivy
      run: |
        wget https://github.com/aquasecurity/trivy/releases/download/v0.33.0/trivy_0.33.0_Linux-64bit.deb
        sudo dpkg -i trivy_0.33.0_Linux-64bit.deb

    - name: Run Trivy Scan for Backend
      run: |
        trivy image --exit-code 1 --severity HIGH,CRITICAL saihari1/hari:polllatestb || true

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install npm Dependencies
      working-directory: polling-app-client
      run: npm install

    - name: Build Frontend
      working-directory: polling-app-client
      run: npm run build

    - name: Build Frontend Docker Image
      working-directory: polling-app-client
      run: |
        docker build -t saihari1/hari:polllatestf .

    - name: Run Trivy Scan for Frontend
      run: |
        trivy image --exit-code 1 --severity HIGH,CRITICAL saihari1/hari:polllatestf || true

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Push Backend Docker Image
      run: |
        docker push saihari1/hari:polllatestb

    - name: Push Frontend Docker Image
      run: |
        docker push saihari1/hari:polllatestf

  sonarqube:
    runs-on: 
      - self-hosted

    needs: build  # Ensures that SonarQube analysis runs after the 'build' job completes

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        path: polling-app-server  # Check out the code again in the specified directory


    - name: Run SonarQube Analysis for Backend
      working-directory: polling-app-server
      run: |
        sonar-scanner \
          -Dsonar.projectKey=github-actions \
          -Dsonar.sources=. \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
